import java.io.*;
import java.net.*;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

public class Client1 {
    public static void main(String[] args) {
        String serverIp = null;
        int serverPort = 0;

        // server_info.dat 파일에서 서버 정보 읽기
        try (BufferedReader reader = new BufferedReader(new FileReader("server_info.dat"))) {
            serverIp = reader.readLine();           // 첫 번째 줄: 서버 IP
            serverPort = Integer.parseInt(reader.readLine()); // 두 번째 줄: 서버 포트
        } catch (IOException e) {
            System.out.println("server_info.dat 파일 읽기 실패: " + e.getMessage());
            return; // 서버 정보를 읽지 못하면 실행 종료
        }

        System.out.println("서버 정보: IP = " + serverIp + ", PORT = " + serverPort);

        try (Socket socket = new Socket(serverIp, serverPort);
             InputStream input = socket.getInputStream();
             OutputStream output = socket.getOutputStream();
             PrintWriter out = new PrintWriter(new OutputStreamWriter(output, StandardCharsets.UTF_8), true);
             BufferedReader in = new BufferedReader(new InputStreamReader(input, StandardCharsets.UTF_8));
             Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8)) {

            System.out.println("서버에 연결되었습니다.");

            String serverMessage;
            while ((serverMessage = in.readLine()) != null) {
                System.out.println(serverMessage);

                // 문제가 나오면 답변 입력
                if (serverMessage.startsWith("문제:")) {
                    System.out.print("답을 입력하세요: ");
                    String answer = scanner.nextLine();
                    out.println(answer);
                } else if (serverMessage.startsWith("모든 문제를 맞췄습니다!")) {
                    // 최종 점수를 받고 종료
                    break;
                }
            }
        } catch (IOException e) {
            System.out.println("서버와의 연결에 문제가 발생했습니다: " + e.getMessage());
        }
    }
}